name: Test Orchestration

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  create-check:
    runs-on: ubuntu-latest
    outputs:
      check_id: ${{ steps.create-check.outputs.check_id }}
    steps:
      - uses: actions/checkout@v4
      - id: create-check
        uses: actions/github-script@v7
        with:
          script: |
            const check = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'All Tests',
              head_sha: context.sha,
              status: 'in_progress',
              started_at: new Date().toISOString(),
            });
            core.setOutput('check_id', check.data.id);
            return check.data.id;

  test-package-a:
    needs: create-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install package manager (from package.json)
        run: |
          corepack enable
          corepack install

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'yarn'

      - name: Install deps
        run: yarn install --immutable

      - name: Run tests
        run: yarn workspace @gha-test-orchestrator/package-a test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: test

      - name: Report progress
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const testOutput = fs.readFileSync('packages/package-a/coverage/coverage-summary.json', 'utf8');
            const coverage = JSON.parse(testOutput);

            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: ${{ needs.create-check.outputs.check_id }},
              status: 'in_progress',
              output: {
                title: 'Package A Tests',
                summary: `Running tests for Package A\nCoverage: ${coverage.total.lines.pct}%`,
                text: 'Test execution in progress...'
              }
            });

  finalize-check:
    needs: [create-check, test-package-a]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Finalize check
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: ${{ needs.create-check.outputs.check_id }},
              status: 'completed',
              conclusion: 'success',
              completed_at: new Date().toISOString(),
              output: {
                title: 'All Tests Completed',
                summary: 'All test suites have completed successfully',
                text: 'âœ… All tests passed'
              }
            });
